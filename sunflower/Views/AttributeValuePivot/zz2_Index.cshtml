@model IEnumerable<BusinessLayerLibrary.AttributeValuePivot>

@{
    ViewBag.Title = "Total Lines Grid Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Total Lines for @ViewBag.Deptname (@ViewBag.DeptID)</h3>

@*@Html.MVCGrid("PivotGrid", new { DeptID = ViewBag.DeptID, SeasonID = ViewBag.SeasonID, ViewID = ViewBag.ViewID })*@


@using(Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <p>
        @Html.ActionLink("Create New PreArticle", "Create", "PreArticleSeasonal", new { SeasonID = ViewBag.SeasonID }, null)
    </p>
    <p>
        <a href="#Filter" class="btn btn-default" data-toggle="collapse">Show Filters</a>
    </p>

    <div id="Filter" class="collapse">
        <div>
            <h4>
                @ViewBag.FilterMessage
            </h4>
        </div>

        <table>
            <tr><td>@Html.DisplayNameFor(model => model.DeptName)</td><td>@Html.Editor("DeptName_f", (string)ViewData["DeptName_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@Html.DisplayNameFor(model => model.CatDesc)</td><td>@Html.Editor("CatDesc_f", (string)ViewData["CatDesc_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att01"]</td><td>@Html.Editor("Att01Fragment", (string)ViewData["Att01Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att06"]</td><td>@Html.Editor("Att06Fragment", (string)ViewData["Att06Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att11"]</td><td>@Html.Editor("Att11Fragment", (string)ViewData["Att11Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att16"]</td><td>@Html.Editor("Att16Fragment", (string)ViewData["Att16Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td></tr>
            <tr><td>@Html.DisplayNameFor(model => model.ContinuationStatus)</td><td>@Html.Editor("ContinuationStatus_f", (string)ViewData["ContinuationStatus_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@Html.DisplayNameFor(model => model.MerchCatDesc)</td><td>@Html.Editor("MerchCatDesc_f", (string)ViewData["MerchCatDesc_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att02"]</td><td>@Html.Editor("Att02Fragment", (string)ViewData["Att02Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att07"]</td><td>@Html.Editor("Att07Fragment", (string)ViewData["Att07Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att12"]</td><td>@Html.Editor("Att12Fragment", (string)ViewData["Att12Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att17"]</td><td>@Html.Editor("Att17Fragment", (string)ViewData["Att17Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td></tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.ReplacementStatus)</td>
                <td>@Html.Editor("ReplacementStatus_f", (string)ViewData["ReplacementStatus_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@Html.DisplayNameFor(model => model.VendorDesc)</td>
                <td>@Html.Editor("VendorDesc_f", (string)ViewData["VendorDesc_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att03"]</td>
                <td>@Html.Editor("Att03Fragment", (string)ViewData["Att03Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att08"]</td>
                <td>@Html.Editor("Att08Fragment", (string)ViewData["Att08Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att13"]</td>
                <td>@Html.Editor("Att13Fragment", (string)ViewData["Att13Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att18"]</td>
                <td>@Html.Editor("Att18Fragment", (string)ViewData["Att18Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.SapArticleID)</td>
                <td>@Html.Editor("SapArticleID_f", (string)ViewData["SapArticleID_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@Html.DisplayNameFor(model => model.MasterDescription)</td>
                <td>@Html.Editor("MasterDescription_f", (string)ViewData["MasterDescription_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att04"]</td>
                <td>@Html.Editor("Att04Fragment", (string)ViewData["Att04Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att09"]</td>
                <td>@Html.Editor("Att09Fragment", (string)ViewData["Att09Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att14"]</td>
                <td>@Html.Editor("Att14Fragment", (string)ViewData["Att14Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.ProposedPreArticleGradeDesc)</td>
                <td>@Html.Editor("ProposedPreArticleGradeDesc_f", (string)ViewData["ProposedPreArticleGradeDesc_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@Html.DisplayNameFor(model => model.ConfirmedPreArticleGradeDesc)</td>
                <td>@Html.Editor("ConfirmedPreArticleGradeDesc_f", (string)ViewData["ConfirmedPreArticleGradeDesc_f"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att05"]</td>
                <td>@Html.Editor("Att05Fragment", (string)ViewData["Att05Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att10"]</td>
                <td>@Html.Editor("Att10Fragment", (string)ViewData["Att10Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
                <td>@ViewData["att15"]</td>
                <td>@Html.Editor("Att15Fragment", (string)ViewData["Att15Fragment"], new { htmlAttributes = new { @class = "form -control  input-sm" } })</td>
            </tr>
        </table>

        <div class="col-md-2">
            <input type="submit" value="Filter" class="btn btn-default" />
        </div>
        <br /><br />
    </div>


    <div>
        <div class="col-md-2">
            @Html.DropDownList("ddDept", ViewData["ddDept"] as SelectList, new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            @Html.DropDownList("ddSeason", ViewData["ddSeason"] as SelectList, new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            @Html.DropDownList("ddView", ViewData["ddView"] as SelectList, new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <h6>
                @Html.ActionLink("Change Dept,Season,View", "Index", "AttributeValuePivot", null, new { @class = "hackLink" })
            </h6>  
        </div>

        

        <script type="text/javascript">
        $(function () {
            $(".hackLink").click(function (e) {
                e.preventDefault();   //Prevent default link click behaviour
                var item = $(this);
                var selectedDept = $("#ddDept").val();
                var selectedSeason = $("#ddSeason").val();
                var selectedView = $("#ddView").val();
                var newUrl = item.attr("href") + "?DeptID=" + selectedDept + "&SeasonID=" + selectedSeason + "&ViewID=" + selectedView;
                window.location.href = newUrl;
            });

        });

        </script>
    
    </div>

    <br /><br /><br /><br />
}














































